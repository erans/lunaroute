name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: lunaroute-server
            asset_name: lunaroute-server-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: lunaroute-server
            asset_name: lunaroute-server-linux-arm64
            cross: true

          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: lunaroute-server
            asset_name: lunaroute-server-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: lunaroute-server
            asset_name: lunaroute-server-darwin-arm64

          # Windows builds
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: lunaroute-server.exe
            asset_name: lunaroute-server-windows-amd64.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: lunaroute-server.exe
            asset_name: lunaroute-server-windows-arm64.exe

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      # Install cross-compilation tool for ARM Linux
      - name: Install cross
        if: matrix.cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross

      # Build using cross for ARM Linux, regular cargo for others
      - name: Build release binary (cross)
        if: matrix.cross == true
        env:
          GIT_SHA: ${{ github.sha }}
        run: cross build --release --target ${{ matrix.target }} --package lunaroute-server

      - name: Build release binary (cargo)
        if: matrix.cross != true
        env:
          GIT_SHA: ${{ github.sha }}
        run: cargo build --release --target ${{ matrix.target }} --package lunaroute-server

      # Strip binaries on Unix systems for smaller size
      - name: Strip binary
        if: matrix.os != 'windows-latest' && matrix.cross != true
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Strip binary (cross-compiled)
        if: matrix.cross == true
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils-aarch64-linux-gnu
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      # Upload artifacts
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
