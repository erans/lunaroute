[workspace]
resolver = "2"
members = [
    "crates/lunaroute-core",
    "crates/lunaroute-config-file",
    "crates/lunaroute-config-postgres",
    "crates/lunaroute-session-sqlite",
    "crates/lunaroute-session-postgres",
    "crates/lunaroute-ingress",
    "crates/lunaroute-egress",
    "crates/lunaroute-routing",
    "crates/lunaroute-session",
    "crates/lunaroute-storage",
    "crates/lunaroute-pii",
    "crates/lunaroute-observability",
    "crates/lunaroute-ui",
    "crates/lunaroute-server",
    "crates/lunaroute-cli",
    "crates/lunaroute-integration-tests",
]
exclude = [
    "tools/backfill-sqlite",
    "examples",
]

[workspace.package]
version = "0.1.2"
edition = "2024"
authors = ["LunaRoute Contributors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/yourusername/lunaroute"
rust-version = "1.90"

[workspace.dependencies]
# Async Runtime
tokio = { version = "1.40", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# HTTP Server & Client
axum = { version = "0.8", features = ["macros", "ws"] }
hyper = { version = "1.0", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
http = "1.0"
http-body-util = "0.1"
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["full"] }
reqwest = { version = "0.12", features = ["json", "stream", "rustls-tls"], default-features = false }
eventsource-stream = "0.2"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.9"

# Tracing & Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
opentelemetry = { version = "0.31", features = ["trace"] }
opentelemetry-otlp = { version = "0.31", features = ["http-proto", "reqwest-client", "reqwest-rustls"], default-features = false }
opentelemetry_sdk = { version = "0.31", features = ["rt-tokio"] }
prometheus = "0.14"

# Compression & Encoding
zstd = "0.13"
lz4 = "1.24"
flate2 = "1.0"
base64 = "0.22"

# Cryptography
aes-gcm = "0.10"
argon2 = "0.5"
sha2 = "0.10"
hmac = "0.12"
rand = "0.9"

# Utilities
anyhow = "1.0"
thiserror = "2.0"
bytes = "1.5"
regex = "1.10"
aho-corasick = "1.1"
once_cell = "1.19"
uuid = { version = "1.10", features = ["v4", "fast-rng"] }
chrono = { version = "0.4", features = ["serde"] }
dashmap = "6.0"
dirs = "6.0"

# Config & File Watching
notify = "8.2"

# CLI
clap = { version = "4.5", features = ["derive", "env"] }

# Testing
mockall = "0.13"
wiremock = "0.6"
tempfile = "3.8"
serial_test = "3.0"

# Machine Learning (Optional - for CUDA examples)
tch = { git = "https://github.com/LaurentMazare/tch-rs.git", branch = "pytorch-2.8.0" }

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1
strip = true

[profile.dev]
opt-level = 0
debug = true
